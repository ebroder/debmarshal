#! /bin/sh
### BEGIN INIT INFO
# Provides:          debmarshal-testing
# Required-Start:    $remote_fs dbus
# Required-Stop:     $remote_fs dbus
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Privileged daemon for debmarshal testing
# Description:       This starts up the daemon responsible for handling
#                    the privileged operations necessary to run a
#                    debmarshal test.
### END INIT INFO

# Author: Evan Broder <ebroder@google.com>

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="debmarshal pivileged daemon"
NAME=debmarshal-testing
SCRIPTNAME=/etc/init.d/$NAME

# Exit if the package is not installed
python -c 'import debmarshal' >/dev/null 2>&1 || exit 0

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
    # Return
    #   0 if daemon has been started
    #   1 if daemon was already running
    #   2 if daemon could not be started
    daemon -r -n "$NAME" -- /usr/bin/python -m debmarshal.privops
}

#
# Function that stops the daemon/service
#
do_stop()
{
    # Return
    #   0 if daemon has been stopped
    #   1 if daemon was already stopped
    #   2 if daemon could not be stopped
    #   other if a failure occurred
    daemon -n "$NAME" --stop
}

#
# Function that restarts the daemon/service
#
do_restart()
{
    # Return
    #   0 if daemon has been stopped
    #   1 if daemon was already stopped
    #   2 if daemon could not be stopped
    #   other if a failure occurred
    daemon -n "$NAME" --restart
}

case "$1" in
    start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	do_start
        [ "$?VERBOSE" != no ] && log_end_msg $?
	;;
    stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
        [ "$?VERBOSE" != no ] && log_end_msg $?
	;;
    restart|force-reload)
	[ "$VERBOSE" != no ] && log_daemon_msg "Restarting $DESC" "$NAME"
        do_restart
        [ "$VERBOSE" != no ] && log_end_msg $?
	;;
    *)
	echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}" >&2
	exit 3
	;;
esac

:
